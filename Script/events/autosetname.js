module.exports.config = {
    name: "autosetname",
    eventType: ["log:subscribe"],
    version: "1.1.0",
    credits: "ùêÇùêòùêÅùêÑùêë ‚ò¢Ô∏è_ñ£ò -ùêÅùêéùêì ‚ö†Ô∏è ùëªùë¨ùë®ùë¥_ ‚ò¢Ô∏è (Modified by ChatGPT)",
    description: "Automatically set nickname and send welcome messages for new members"
};

module.exports.run = async function ({ api, event, Users }) {
    const { threadID } = event;
    const memJoin = event.logMessageData.addedParticipants.map(info => info.userFbId);

    // ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶∏‡ßÅ‡¶®‡ßç‡¶¶‡¶∞ ‡¶∞‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶Æ ‡¶≤‡¶æ‡¶á‡¶® (‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶¨‡¶æ‡¶∞ ‡¶è‡¶≤‡ßã‡¶Æ‡ßá‡¶≤‡ßã‡¶≠‡¶æ‡¶¨‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶¨‡ßá)
    const welcomeMessages = [
        "‡¶Ü‡¶∏‡¶∏‡¶æ‡¶≤‡¶æ‡¶Æ‡ßÅ ‡¶Ü‡¶≤‡¶æ‡¶á‡¶ï‡ßÅ‡¶Æ üå∏\n‡¶Ü‡¶Æ‡¶ø ‡¶∏‡¶ø‡¶´‡¶æ‡¶§‡ßá‡¶∞ ‡¶¨‡¶ü ü§ñ\n‡¶∏‡¶ø‡¶´‡¶æ‡¶§ ‡¶≠‡¶æ‡¶á ‡¶™‡ßÉ‡¶•‡¶ø‡¶¨‡ßÄ‡¶∞ ‡¶∏‡ßá‡¶∞‡¶æ ‡¶è‡¶°‡¶Æ‡¶ø‡¶®! ‚ù§Ô∏è",
        "‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã ‡¶®‡¶§‡ßÅ‡¶® ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø! üëã\n‡¶Ü‡¶Æ‡¶ø ‡¶∏‡¶ø‡¶´‡¶æ‡¶§ ‡¶≠‡¶æ‡¶á‡¶Ø‡¶º‡ßá‡¶∞ ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶∏‡ßç‡¶§ ‡¶¨‡¶ü üòä\n‡¶∏‡¶ø‡¶´‡¶æ‡¶§ ‡¶≠‡¶æ‡¶á‡¶ï‡ßá ‡¶∏‡¶æ‡¶≤‡¶æ‡¶Æ ‡¶¶‡¶æ‡¶ì, ‡¶â‡¶®‡¶ø ‡¶Ö‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£!",
        "‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ ‡¶®‡¶§‡ßÅ‡¶® ‡¶≠‡¶æ‡¶á/‡¶¨‡ßã‡¶®! üéâ\n‡¶Ü‡¶Æ‡¶ø ‡¶∏‡¶ø‡¶´‡¶æ‡¶§ ‡¶≠‡¶æ‡¶á‡¶Ø‡¶º‡ßá‡¶∞ ‡¶∏‡¶π‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶¨‡¶ü üíé\n‡¶∏‡¶ø‡¶´‡¶æ‡¶§ ‡¶≠‡¶æ‡¶á‡¶ï‡ßá ‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶, ‡¶â‡¶®‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡¶á ‡¶Ü‡¶Æ‡¶ø ‡¶Ü‡¶õ‡¶ø!",
        "‡¶ì‡¶π‡ßá ‡¶®‡¶§‡ßÅ‡¶® ‡¶¨‡¶®‡ßç‡¶ß‡ßÅ! üòç\n‡¶Ü‡¶Æ‡¶ø ‡¶∏‡¶ø‡¶´‡¶æ‡¶§‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶ø‡¶Ø‡¶º ‡¶¨‡¶ü üåü\n‡¶∏‡¶ø‡¶´‡¶æ‡¶§ ‡¶≠‡¶æ‡¶á‡¶ï‡ßá ‡¶ï‡ßÅ‡¶∞‡ßç‡¶®‡¶ø‡¶∂, ‡¶â‡¶®‡¶ø ‡¶ï‡¶ø‡¶Ç‡¶¨‡¶¶‡¶®‡ßç‡¶§‡¶ø ‡¶è‡¶°‡¶Æ‡¶ø‡¶®!"
    ];

    for (let idUser of memJoin) {
        const { readFileSync, writeFileSync } = global.nodemodule["fs-extra"];
        const { join } = global.nodemodule["path"];
        const pathData = join("./modules/commands", "cache", "autosetname.json");

        // ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶ú (‡¶Ø‡ßá‡¶Æ‡¶® ‡¶Ü‡¶ó‡ßá‡¶∞ ‡¶Æ‡¶§‡ßã‡¶á ‡¶õ‡¶ø‡¶≤)
        var dataJson = JSON.parse(readFileSync(pathData, "utf-8"));
        var thisThread = dataJson.find(item => item.threadID == threadID) || { threadID, nameUser: [] };
        if (thisThread.nameUser.length != 0) {
            var setName = thisThread.nameUser[0];
            await new Promise(resolve => setTimeout(resolve, 1000));
            var nameInfo = await api.getUserInfo(idUser);
            var fullName = nameInfo[idUser].name;
            api.changeNickname(`${setName} ${fullName}`, threadID, idUser);
        }

        // ‡¶è‡¶≤‡ßã‡¶Æ‡ßá‡¶≤‡ßã ‡¶ì‡ßü‡ßá‡¶≤‡¶ï‡¶æ‡¶Æ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã
        const randomMsg = welcomeMessages[Math.floor(Math.random() * welcomeMessages.length)];
        api.sendMessage(randomMsg, threadID);
    }

    return api.sendMessage(`Set temporary nickname & welcomed new member(s)`, threadID);
};
